#!/bin/sh
trap 'echo "Para salir, tienes que escribir "salir"."' SIGINT

trap 'echo "Para salir, tienes que escribir "salir"."' SIGTSTP
#######################################################################################################################################
function lucky(){

	#MENÚ PRINCIPAL

salir=0
opc=0
suits=("Oros" "Copas" "Espadas" "Bastos")
faces=(1 2 3 4 5 6 7 10 11 12)
while [ "$salir" == 0 ]; do
        case "$opc" in
                0) #Imprime el menu
                        echo -e "\t\t\e[1;33m \n\n\n\t\t    B I E N V E N I D O   A:\n"       
                        echo -e "\t\t\e[1;37m  ************************__******************** ""\e[0m"
                        echo -e "\t\t\e[1;37m  ***___*****************| |***__*************** ""\e[0m"
                        echo -e "\t\t\e[1;37m  ***|  |****************| |**/ /*****__* _***** ""\e[0m"
                        echo -e "\t\t\e[1;37m  ***|  |****************| |*/ /  \**/  /| |**** ""\e[0m"
                        echo -e "\t\t\e[1;37m  ***|  |***__***__*_____| |/ /*\  \/  /*| |**** ""\e[0m"
                        echo -e "\t\t\e[1;37m  ***|  |***| |*| |/  ___|   /***\    /**| |**** ""\e[0m"
                        echo -e "\t\t\e[1;37m  ***|  |***| |*| |  /***|   \****|  |***|_|**** ""\e[0m"
                        echo -e "\t\t\e[1;37m  ***|  |___| |_| |  \___| |\ \***|  |*** _ **** ""\e[0m"
                        echo -e "\t\t\e[1;37m  ***|______\_____/\_____|_|*\_\**|__|***|_|**** ""\e[0m"
                        echo -e "\t\t\e[1;37m  ********************************************** ""\e[0m"
                        echo -e "\e[1;33m\n\n\t\t    Selecciona una opción \e[0;33m(número+'enter')\e[1;33m:\e[1;37m\n\n\t\t\t      1) JUEGO 1
                                   3) INSTRUCCIONES \n\t\t\t      4) SALIR \n\t\t\t  \e[0m HABIA OTRO SUBJUEGO PERO NO LOGRAMOS QUE FUNCIONARA"  #2) JUEGO 2\n\t\t\t 
                        read opc
                        ;;
                1) #Empieza juego 1
                        opc=0
                        macho=(${faces[$((RANDOM%9))]} ${suits[$((RANDOM%3))]});
                        jugador=(${faces[$((RANDOM%9))]} ${suits[$((RANDOM%3))]});
                        echo -e "\t\t\tIniciaste un juego vaquero" 
                        echo -e "\t\t\tEl macho tiene la carta: " ${macho[@]};
                        echo -e "\t\t\t¿Quieres una carta,si o no?"
                        read respuesta
                        if [ $respuesta = 'si' ]; then       
                                echo -e "\t\t\tTu carta es: " ${jugador[@]};
                                a=${macho[0]}
                                b=${jugador[0]}
                                if [ ${macho[0]} = ${jugador[0]} ]; then
                                echo -e "\t\t\e[1;37m\e[1;41m"'           _____                      __        ' "\e[0m"
                                echo -e "\t\t\e[1;37m\e[1;41m"'          / ___/__       ____      __/ /__      ' "\e[0m"
                                echo -e "\t\t\e[1;37m\e[1;41m"'         / /__ / /____  / _  /____/__  __/__    ' "\e[0m"
                                echo -e "\t\t\e[1;37m\e[1;41m"'        / ___//       \/ ___/ _   / / / __  /   ' "\e[0m"
                                echo -e "\t\t\e[1;37m\e[1;41m"'       / /__ /  /  /  / /  / /_/ /_/ / ____/    ' "\e[0m"
                                echo -e "\t\t\e[1;37m\e[1;41m"'      /_____/__/__/__/_/  /____/__/_/_____/     ' "\e[0m"                      $
                                echo -e "\e[1;31m\n\tPresiona 'enter' para volver al menú principal."
                                read
                                clear
                                elif [ $a -gt $b ]; then 
                                echo -e "\t\t\e[1;37m \n\n\n\t\t\t               GANO EL MACHO!!    \n"       
                                echo -e "\t\t\e[1;37m\e[1;41m"'          ____           _____        __          ' "\e[0m"
                                echo -e "\t\t\e[1;37m\e[1;41m"'         / __ \___  ____/  /_/_______/ /_____     ' "\e[0m"
                                echo -e "\t\t\e[1;37m\e[1;41m"'        / /_/ / _ \/ __/  /__  ___/__  __/ _ \    ' "\e[0m"
                                echo -e "\t\t\e[1;37m\e[1;41m"'       / ____/  __/ / _  /  /__  /  / / / ___/    ' "\e[0m"
                                echo -e "\t\t\e[1;37m\e[1;41m"'      /_/   /____/_/____/__/____/  /_/  \___/     ' "\e[0m"  
                                echo -e "\t\t\e[1;37m\e[1;41m"'                                                  ' "\e[0m"

                                echo -e "\e[1;31m\n\tPresiona 'enter' para volver al menú principal."
                                read
                                clear
                                elif [ $b -gt $a ]; then
                                echo -e "\t\t\e[1;37m\e[1;41m"'     ______                              __        ' "\e[0m"
                                echo -e "\t\t\e[1;37m\e[1;41m"'    / ____/                           __/ /__      ' "\e[0m"
                                echo -e "\t\t\e[1;37m\e[1;41m"'   /  /_________  _____ ______   ____/__  __/__    ' "\e[0m"
                                echo -e "\t\t\e[1;37m\e[1;41m"'  /  __  /  _  / /     /  _   / /   __ / / __  /   ' "\e[0m"
                                echo -e "\t\t\e[1;37m\e[1;41m"' /  /_/ /  /_//_/  /  /  /_/ /_/___   / / ____/    ' "\e[0m"
                                echo -e "\t\t\e[1;37m\e[1;41m"'/______/_______/__/__/_________/_____/_/_____/     ' "\e[0m"
                                echo -e "\t\t\e[1;37m\e[1;41m"'                                                   ' "\e[0m"

                                echo -e "\e[1;31m\n\tPresiona 'enter' para volver al menú principal."
                                read
                                clear
                                fi
                        fi
                        opc=0
                        ;;
              #  2) ##Juego 2
             #           echo -e "\t\t\tIniciaste un juego vaquero"      
               #         res=0
               #         cuenta=()
              #          op=0
              #          while [ $op == 0 ];do 
               #         echo "¿Quiere una carta, si o no ?"
                #        read respuesta
                 #       if [ $respuesta = 'si' ]; then
                 #               jugador=(${faces[$((RANDOM%9))]} ${suits[$((RANDOM%3))]});
                 #               echo -e "\t\t\tTu carta es: " ${jugador[@]};
                 #               cuenta=("${cuenta[@]}" ${jugador[0]})
                 #               echo ${cuenta[@]}
                 #               echo ${cuenta[@]} | awk {for((i=1;i<=NF;i++)){if[ $i==10||$i==11||$i==12 ]{res+=0.5;}else{res+=$i;}}}END{print re$}#
                #
                 #       elif [ $respuesta = 'no' ];then
                  #              echo "OK!!"
                   #             op=1
                    #    fi
                     #   done
                      #          if [ "$res" = "7.5" ];then
                    #                 echo -e "\t\t\e[1;37m\e[1;41m"'     ______                              __        ' "\e[0m"
                    #                    echo -e "\t\t\e[1;37m\e[1;41m"'    / ____/                           __/ /__      ' "\e[0m"
                    #                    echo -e "\t\t\e[1;37m\e[1;41m"'   /  /_________  _____ ______   ____/__  __/__    ' "\e[0m"
                    #                    echo -e "\t\t\e[1;37m\e[1;41m"'  /  __  /  _  / /     /  _   / /   __ / / __  /   ' "\e[0m"
                    #                    echo -e "\t\t\e[1;37m\e[1;41m"' /  /_/ /  /_//_/  /  /  /_/ /_/___   / / ____/    ' "\e[0m"
                    #                    echo -e "\t\t\e[1;37m\e[1;41m"'/______/_______/__/__/_________/_____/_/_____/     ' "\e[0m"
                    #                    echo -e "\t\t\e[1;37m\e[1;41m"'                                                   ' "\e[0m"
                    #                    echo -e "\e[1;31m\n\tPresiona 'enter' para volver al menú principal."
                    #            read
                    #            clear
                    #            elif [ "$res" != "7.5" ];then 
                    #                    echo -e "\t\t\e[1;37m\e[1;41m"'          ____           _____        __          ' "\e[0m"
                    #                    echo -e "\t\t\e[1;37m\e[1;41m"'         / __ \___  ____/  /_/_______/ /_____     ' "\e[0m"
                    #                    echo -e "\t\t\e[1;37m\e[1;41m"'        / /_/ / _ \/ __/  /__  ___/__  __/ _ \    ' "\e[0m"
                    #                    echo -e "\t\t\e[1;37m\e[1;41m"'       / ____/  __/ / _  /  /__  /  / / / ___/    ' "\e[0m"
                    #                    echo -e "\t\t\e[1;37m\e[1;41m"'      /_/   /____/_/____/__/____/  /_/  \___/     ' "\e[0m"  
                    #                    echo -e "\t\t\e[1;37m\e[1;41m"'                                                  ' "\e[0m" 
                    #                    echo -e "\e[1;31m\n\tPresiona 'enter' para volver al menú principal."
                    #            read
                    #            clear
                    #            fi
                    #     opc=0
                     #   ;;

                3) ##Impresión en pantalla de las instrucciones de juego
                        opc=0
                        clear
                        echo -e "\e[1;33m\n\n\t\tPrueba tu suerte con las cartas del juego 1\n\n"
                        echo -e "\e[1;32m     El objetivo del juego es sacar la carta mas alta."
                        echo -e "     Jugaras en contra de nuestro mejor jugador, en \n\tel juego se repartira una carta aleatoriamente.\n"
                        echo -e "     Si la tuya es la mas alta ganaras, si no, bueno \n\tes obvio que seras el perdedor"
                        echo -e "     \t\t\t¿Te arriesgaras? \n"
                        echo -e "     Todo depende de que tan suertudo te sientas hoy ;)\n"
                        
                  #      echo -e "\e[1;33m\n\n\t\tPrueba tu suerte con las cartas del juego 2\n\n"
                 #       echo -e "\e[1;32m   ¿Sabes jugar 7 1/2 ?"
                  #      echo -e "  El objetivo del juego es juntar 7 1/2 puntos: \n Se te dara la opcion de pedir o no una carta si te pasas o te falta pierdes\n"
                   #     echo -e "    Recuerda que el 10 11 y 12 valen por 1/2\n"
                    #    echo -e "     \t\t\t¿Te arriesgaras? \n"
                    #    echo -e "     Todo depende de que tan suertudo te sientas hoy ;)\n"
                        
                        echo -e "\e[1;31m\n\tPresiona 'enter' para volver al menú principal."
                        read
                        clear 
                        ;;

                4)      #Salir del juego
                        salir=1
                        ;;

                *)
                        opc=0
                        ;;
        esac
done
}

####################################################################################################################################
#funcion de mp3
function mp3(){
salir=0
opcion=0
#echo -e " Estamos en la carpeta: `pwd` \n"
ruta=Música
cd "$ruta"
while [ "$salir" == 0 ];do 
        existe=$(dpkg --get-selections | grep -w mpg123 | grep -w install)
        if [ "$existe" = " " ];then 
        `sudo apt-get install mpg123`
        fi
        case "$opcion" in
                0) #imprime menu
                   echo -e "\t\t\e[1;33m \n\n\n\t\t    B I E N V E N I D O   A:\n"       
                        echo -e "\t\t\e[1;37m  *********************______**************************** ""\e[0m"
                        echo -e "\t\t\e[1;37m  ***______***********|   _  \*************************** ""\e[0m"
                        echo -e "\t\t\e[1;37m  ***|   _ \**********|  |_| |**__*****__*____**______*** ""\e[0m"
                        echo -e "\t\t\e[1;37m  ***|  |_||**********|      /*|  \***/  |    \*|__  |*** ""\e[0m"
                        echo -e "\t\t\e[1;37m  ***|  ___/____*____*|     /**|   \*/   | --  \**/ /**** ""\e[0m"
                        echo -e "\t\t\e[1;37m  ***|  |***| __/ __ \|     \**|      /| |  ___/*/_ \**** ""\e[0m"
                        echo -e "\t\t\e[1;37m  ***|  |***| ||  ____|   _  \*|  |\ /*| |  |******\ \*** ""\e[0m"
                        echo -e "\t\t\e[1;37m  ***|  |***| ||  \___|  |_| /*|  |****| |  |***___/ /*** ""\e[0m"
                        echo -e "\t\t\e[1;37m  ***|__|***\_|*\_____|_____/**|__|****|_|__|***|___/**** ""\e[0m"
                        echo -e "\t\t\e[1;37m ***********************************************     **** ""\e[0m"
                   echo -e  "\t********REPRODUCTOR MP3********"
                   echo -e " Estamos en la carpeta: `pwd` \n"
                   echo -e  "\t1)REPRODUCIR UNA CANCION"
                   echo -e  "\t2)REPRODUCIR TODAS LAS CANCIONES"
                   echo -e  "\t3)LISTAR OPCIONES DEL REPRODUCTOR"
                   echo -e  "\t4)AYUDA"
                   echo -e  "\t5)SALIR"
                   read opcion;;
                1) echo uno
                echo "Dame la cancion que te gustaria escuchar:"
                read cancion

                `mpg123 $cancion`
                opcion=0 ;;
                2) echo dos
                `mpg123 *mp3`
                opcion=0 ;;
                3)echo "Tus canciones son: " 
                echo `ls | grep "mp3"`
                opcion=0 ;;             
                4) opcion=0
                echo -e "\e[1;33m\n\n\t\t**** INSTRUCCIONES ****\n\n"
                echo -e "\e[1;32m     Este es un reproductor de mp3\n"
                echo -e "Hay 5 opciones a elegir:\n\t 1)Reproduce una cancion del directorio Musica ;se debe especificar el nombre con la exte$"
                echo -e "\n\t 2) Reproduce todas las canciones del directorio Musica"
                echo -e "\n\t 3) Lista las canciones del directorio Musica"
                echo -e "\n\t 4) Muestra este instructivo"
                echo -e "\n\t 5) Sale "
                echo -e "\e[1;31m\n\t\tPresiona 'enter' para volver al menú principal." "\e[0m"
                read
                ;;
                5) echo "***** ADIOOOS!! *****"
                echo -e "Presione una tecla para continuar..."
                  read
                  clear
                salir=1;;
                *) echo -e "\E[1;31m    Opcion inválida. Intente de nuevo"
                  echo -e "Presione una tecla para continuar..."
                  read
                  clear
        esac
done

}


########################################################################################################################
#funcion de el juego de gato
function juego_gato(){

sudo apt-get install whois
sudo apt-get install banner

clear
echo "Nombre de jugador 1:"
read nombre_de_jugador_1
echo "Nombre de jugador 2:"
read nombre_de_jugador_2


numero_jugador1=$((RANDOM % 9))
numero_jugador2=$((RANDOM % 9))
borrar_formato_de_letra="\033[0m"

#Asignar color a usuario 1
   case $numero_jugador1 in
          0) color_jugador1="\033[1;31m";; #ROJO
          1) color_jugador1="\033[1;30m";; #NEGRO
          2) color_jugador1="\033[1;32m";; #VERDE
          3) color_jugador1="\033[1;33m";; #AMARILLO
          4) color_jugador1="\033[1;34m";; #AZUL FUERTE
          5) color_jugador1="\033[1;35m";; #MORADO
          6) color_jugador1="\033[1;36m";; #AZUL CLARO
          7) color_jugador1="\033[1;37m";; #BLANCO
      *) color_jugador1="\033[1;31m";; #ROJO
    esac
#Asignar color a usuario 2
  case $numero_jugador2 in
          0) color_jugador2="\033[1;31m";; #ROJO
          1) color_jugador2="\033[1;30m";; #NEGRO
          2) color_jugador2="\033[1;32m";; #VERDE
          3) color_jugador2="\033[1;33m";; #AMARILLO
          4) color_jugador2="\033[1;34m";; #AZUL FUERTE
          5) color_jugador2="\033[1;35m";; #MORADO
          6) color_jugador2="\033[1;36m";; #AZUL CLARO
          7) color_jugador2="\033[1;37m";; #BLANCO
      *) color_jugador2="\033[1;34m";; #AZUL FUERTE
    esac

#Evitar que el color de los jugadores sea el mismo
if [ $color_jugador1 = $color_jugador2 ]
then
    color_jugador1="\033[1;31m"
    color_jugador2="\033[1;34m"
fi
clear
#Pedir y guardar el nombre de los jugadores


clear #Limpiar pantalla

#Variables que van a contener el texto con formato de los nombres de los usuarios
jugador_1=$color_jugador1"$nombre_de_jugador_1"$borrar_formato_de_letra
jugador_2=$color_jugador2"$nombre_de_jugador_2"$borrar_formato_de_letra


#Aqui acaba la parte en la que definimos los nombres y todo eso

posiciones=(- - - - - - - - -)  # vector de posiciones

turno_jugador_1=true  # Inicializa la ronda con el jugador 1
final_de_ronda=false  #Estado de la ronda
accion_invalida=false  #Accion invalida 

function dibujar_gato { #funcion que va a dibujar el gato cada turno
  
  clear

  posiciones_guardadas=$1[@]  # La funcion lee las posiciones guardadas en el vector y con ellas funciona
  posiciones=("${!posiciones_guardadas}") # nuevo valor del vector
  banner "FIGHT!" 
echo -e "\t    "$jugador_1" VS "$jugador_2 "\n\n"
  for (( fila=1; fila<=3; fila++ ));do #En este for se va a hacer las filas tanto vacías como con caracteres
    
    espacio="    " #Son los espacios de las filas en donde pueden estar X o O
    espacio_vacio="    " #Son los espacios de las filas en donde no van a estar X o O
    for (( columna=1; columna<$((30)); columna++ ));do
            
      if [[ $(( $columna%((10)) )) == 0 ]]; then #Cada desima columna ponemos un espacio y la barra | que formara el gato
        espacio=$espacio"|" 
        espacio_vacio=$espacio_vacio"|" #en ambos tipos de espacios creamos el | para que sea una linea "continua"
      else
        if [[ $(( $columna%5 )) == 0 ]]; then #SI es verdad, en estos puntos es donde se encuentra el espacio que tiene a X o O

          x=$(($fila-1))
          y=$((($columna - 5) / 10))

          if [[ $x == 0 ]]; then
            simbolo=${posiciones[$y]} #Analiza el valor que tiene el vector posición en cada espacio centrico del gato
          elif [[ $x == 1 ]]; then
            simbolo=${posiciones[(($y+3))]} #Guarda el valor de esa posicion, ya sea X o O
          else
            simbolo=${posiciones[(($y+6))]}
          fi

          
          if [[ $simbolo == "-" ]]; then simbolo=" "; fi # Si el simbolo resulta - es porque ninguno de los jugadores ha escogido esa posicion y se guarda el simbolo actual como vacío

          if [[ $simbolo == "X" ]] ; then  # Si el simbolo es X, el jugador 1 ya había seleccionado ese espacio
            espacio=$espacio$color_jugador1$simbolo$borrar_formato_de_letra # vuelve a poner una X con el color del jugador en ese espacio
          else
            espacio=$espacio$color_jugador2$simbolo$borrar_formato_de_letra
          fi

          espacio_vacio=$espacio_vacio" "  # Agrega un esacio en vez de un símbolo, porque esa casilla aun no se escoge
        else  # EL espacio no es de los que contiene a X o O por lo que se remplaza con
          espacio=$espacio" "
          espacio_vacio=$espacio_vacio" "
        fi
      fi
    done
   echo -e "$espacio_vacio""\n""$espacio""\n""$espacio_vacio" #imprime los espacios de las filas
    if [[ $fila != 3 ]]; then
      echo -e "       __ __ __ __ __ __ __ __        " #imprime las lineas horizontales
    fi
  done
  echo -e "\n"

  echo -e "            COMANDOS      "
  echo -e "            1 \ 2 \ 3       "
  echo -e "           ----\---\----    "
  echo -e "              4 \ 5 \ 6     "
  echo -e "             ----\---\----  "
  echo -e "                7 \ 8 \ 9   "
  echo -e "\n"
}

function analizar_jugadas { #Funcion que va a leer el movimiento hecho cada turno

  caracteres_posiciones=$(printf "%s" "${posiciones[@]}") #convertimos el vector en un conjunto de caracteres

  analizar_estado_partida $caracteres_posiciones #Analiza si el juego ha terminado

  if [ "$final_de_ronda" = false ] ; then #si la ronda aun no acaba

    if [ "$accion_invalida" = false ] ; then # si la accion es valida
      if [ "$turno_jugador_1" = true ] ; then #si es el turno del jugador 1
        echo -e "\t   Turno de "$jugador_1 #el signo va a ser X
        signo="X"
        turno_jugador_1=false #cambio de turno
      else
        echo -e "\t   Turno de "$jugador_2 # el signo va a ser O
        signo="O"
        turno_jugador_1=true #cambio de turno
      fi
    else
      accion_invalida=false
    fi

    read -d'' -s -n1 seleccion  # leer el comando del jugador

    casilla=343270  # inicializa casilla con cualquier numero que no sea valido en caso de que el primer comando que haga no sea valido
    case $seleccion in
          1) casilla=0;;
          2) casilla=1;;
          3) casilla=2;;
          4) casilla=3;;
          5) casilla=4;;
          6) casilla=5;;
          7) casilla=6;;
          8) casilla=7;;
          9) casilla=8;;
    esac

    if [ "${posiciones["$casilla"]}" == "-" ]; then
      posiciones["$casilla"]=$signo 
    else
      accion_invalida=true  # De otra forma la seleccion del jugador sería invalida
    fi

    activar_ronda  # Mientras la ronda no haya acabado, se seguira realizando el programa
  fi


}
function activar_ronda {
  dibujar_gato posiciones
  analizar_jugadas
}

function finalizar_ronda {
  final_de_ronda=true
  dibujar_gato posiciones
}

function analizar_estado_partida { #analizamos los caracteres para saber si algun jugador ha ganado
  espacios=${1:0:3}" "${1:3:3}" "${1:6:8}
  columnas=${1:0:1}${1:3:1}${1:6:1}" "${1:1:1}${1:4:1}${1:7:1}" "${1:2:1}${1:5:1}${1:8:1}
  diagonales=${1:0:1}${1:4:1}${1:8:1}" "${1:2:1}${1:4:1}${1:6:1}
  if [[ $espacios =~ [X]{3,} || $columnas =~ [X]{3,} || $diagonales =~ [X]{3,} ]]; then
    finalizar_ronda
    echo -e "\t  "$jugador_1" ha ganado! \n"
    return
  fi
  if [[ $espacios =~ [O]{3,} || $columnas =~ [O]{3,} || $diagonales =~ [O]{3,} ]]; then
    finalizar_ronda
    echo -e "\t  "$jugador_2" ha ganado"
    return
  fi
  if [[ ! $caracteres_posiciones =~ [-] ]]; then  # todas las posiciones se ocuparon por lo que es un empate
    finalizar_ronda
    echo -e "\t\tEmpate \n"
  fi
}

activar_ronda

}
####################################################################################################################################
	#Definimos los colores de el usuario y el prompt
numero_usuario=$((RANDOM % 9))
numero_prompt=$((RANDOM % 9))
borrar_formato_de_letra="\033[0m"

      	  rojo="\033[1;31m" #ROJO
          negro="\033[1;30m" #NEGRO
          verde="\033[1;32m" #VERDE
          amarillo="\033[1;33m" #AMARILLO
          azulf="\033[1;34m" #AZUL FUERTE
          morado="\033[1;35m" #MORADO
          azulc="\033[1;36m" #AZUL CLARO
          blanco="\033[1;37m" #BLANCO

#Asignar color a usuario 1
   case $numero_usuario in
          0) color_usuario="\033[1;31m";; #ROJO
          1) color_usuario="\033[1;30m";; #NEGRO
          2) color_usuario="\033[1;32m";; #VERDE
          3) color_usuario="\033[1;33m";; #AMARILLO
          4) color_usuario="\033[1;34m";; #AZUL FUERTE
          5) color_usuario="\033[1;35m";; #MORADO
          6) color_usuario="\033[1;36m";; #AZUL CLARO
          7) color_usuario="\033[1;37m";; #BLANCO
      *) color_usuario="\033[1;31m";; #ROJO
    esac
#Asignar color a usuario 2
  case $numero_prompt in
          0) color_prompt="\033[1;31m";; #ROJO
          1) color_prompt="\033[1;30m";; #NEGRO
          2) color_prompt="\033[1;32m";; #VERDE
          3) color_prompt="\033[1;33m";; #AMARILLO
          4) color_prompt="\033[1;34m";; #AZUL FUERTE
          5) color_prompt="\033[1;35m";; #MORADO
          6) color_prompt="\033[1;36m";; #AZUL CLARO
          7) color_prompt="\033[1;37m";; #BLANCO
      *) color_prompt="\033[1;34m";; #AZUL FUERTE
    esac

#Evitar que el color de los jugadores sea el mismo
if [ $color_usuario = $color_prompt ]
then
    color_usuario="\033[1;31m"
    color_prompt="\033[1;34m"
fi
usuario=$color_usuario"$USER"$borrar_formato_de_letra
prompt=$color_prompt"@:~$PWD$"$borrar_formato_de_letra
################################################################################################################################3
clear
echo -n -e Usuario:
read -e $us
echo -n -e Contraseña:
read -e -s $con

echo -e "\nBienvenido!!"

echo  -e "Prebeshell activa"
while [ "$respuesta" != "salir" ];
do

 echo   -e -n  $usuario$prompt
 read -e respuesta
   
case $respuesta in 

		gato)	
			juego_gato
			;;

		lucky)	
			lucky
			;;

		prebeplayer)	
			mp3
			;;


		ayuda)	
			echo -e "Los comandos son los siguientes:\n"
			echo -e $rojo"arbol2 - crea una imagen gráfica de la estructura de directorios actuales\n"$borrar_formato_de_letra
			echo -e $negro"ayuda - despliega en pantalla informacion relevante acerca de las funciones con las que cunenta la prebeshell, además de una breve descripción de cada uno de ellos y su funcionamiento\n"$borrar_formato_de_letra
			echo -e $verde"buscar <archivo> <directorio> - busca un directorio especificado en un directorio igualmente especificado creditos - imprime los creditos de la prebeshell\n"$borrar_formato_de_letra
			echo -e $azulc"creditos - mustra los creditos e informacion de los creadores de la prebeshell\n"$borrar_formato_de_letra
			echo -e $amarillo"dia - muestra el dia actual\n"$borrar_formato_de_letra
			echo -e $azulf"gato - activa el juego para dos de gato\n"$borrar_formato_de_letra
			echo -e $morado"hora - muestra la hora actual\n"$borrar_formato_de_letra
			echo -e $azulc"infosis <opcion> - muestra informacion del sistema dependiendo del comando usado, <version> para mostrar la version del kernel, <hardware> para imprimir el tipo de hardware, <red> para ver tu red\n"$borrar_formato_de_letra
			echo -e $blanco"lucky - activa el juego de azar\n"$borrar_formato_de_letra
			echo -e $negro"prebeplayer - ejecuta el reproductor mp3"$borrar_formato_de_letra
			;;
		creditos)	
			echo -e $azulc"PROTECO generación 35"
			echo -e "Prebeshell"
			echo -e "Prebecarios 4 y 6"
			echo -e "Silva Sandoval Cecilia"
			echo -e "Garrido Mendoza Luis Alberto"$borrar_formato_de_letra
			;;
		arbol2)	
			echo "no se pudo :("
			;;

		infosis)	
			echo Tienes que agregar otro comando, consulta ayuda para mas informacion
			;;

		"infosis version")	
			uname -v
			;;

		"infosis hardware")	
			uname -m
			;;

		"infosis red")	
			uname -n
			;;

		buscar)
			echo "no se pudo pudo :(" 
			;;

		hora)
			date '+%H:%M'
			;;
		dia)
			date '+%W - %B - %Y'

			;;
			*)
			$respuesta

		esac

done


			


